version: '3.8'

services:
  # Database for the application
  postgres:
    image: postgres:15
    container_name: circular_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=circular
      - POSTGRES_USER=circular_user
      - POSTGRES_PASSWORD=circular_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U circular_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - circular-network

  # SonarQube database
  sonar-db:
    image: postgres:15
    container_name: circular_sonar_db
    environment:
      - POSTGRES_DB=sonar
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - sonar_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - circular-network

  # SonarQube for code quality
  sonarqube:
    image: sonarqube:9.9.2-community
    container_name: circular_sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      sonar-db:
        condition: service_healthy
    networks:
      - circular-network
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  # Jenkins for CI/CD pipelines
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: circular_jenkins
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      - maven_cache:/root/.m2
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - circular-network

  # Local Maven repository cache
  maven:
    image: maven:3.9-eclipse-temurin-17
    container_name: circular_maven
    volumes:
      - ./:/app
      - maven_cache:/root/.m2
    working_dir: /app
    command: mvn clean package -DskipTests
    environment:
      - MAVEN_CONFIG=/root/.m2
    networks:
      - circular-network

  # MinIO for S3-compatible storage (for verification documents)
  minio:
    image: minio/minio
    container_name: circular_minio
    ports:
      - "9001:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9090"
    networks:
      - circular-network

networks:
  circular-network:
    driver: bridge

volumes:
  postgres_data:
  sonar_postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  jenkins_home:
  maven_cache:
  minio_data: